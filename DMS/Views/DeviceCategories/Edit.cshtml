@model DMS.DTO.DeviceCategoryViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>DeviceCategory</h4>
<hr />

@using (Html.BeginForm())
{
    @Html.HiddenFor(model => model.ID)

    <div class="form-group mb-2">
        @Html.LabelFor(model => model.CategoryName)
        @Html.TextBoxFor(model => model.CategoryName, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.CategoryName)
    </div>

    <div class="form-group mb-2">
        <label>Properties:</label><br />
        @foreach (var property in Model.AvailableProperties)
        {
            <div class="form-check mb-1">
                <input class="form-check-input" @(Model.SelectedPropertyIds.Contains(property.ID) ? "checked" : "")
                type="checkbox" name="SelectedPropertyIds" value="@property.ID">
                <label class="form-check-label" for="flexCheckDefault">
                    @property.PropertyDescription
                </label>
            </div>
        }
    </div>

    <button type="submit" class="btn btn-primary mb-2">Save Changes</button>
}




<div class="mt-2">
    <a asp-action="Index" class="btn btn-outline-dark">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
