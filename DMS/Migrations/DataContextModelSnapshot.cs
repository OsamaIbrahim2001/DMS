// <auto-generated />
using System;
using DMS.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DMS.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DMS.Models.Device", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("AcquisitionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DeviceCategoryID")
                        .HasColumnType("int");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Memo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DeviceCategoryID");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("DMS.Models.DeviceCategory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("DeviceCategories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CategoryName = "Printer"
                        },
                        new
                        {
                            ID = 2,
                            CategoryName = "Laptop"
                        },
                        new
                        {
                            ID = 3,
                            CategoryName = "Switch"
                        });
                });

            modelBuilder.Entity("DMS.Models.PropertyItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("PropertyDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("PropertyItems");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            PropertyDescription = "HD"
                        },
                        new
                        {
                            ID = 3,
                            PropertyDescription = "Processor"
                        },
                        new
                        {
                            ID = 5,
                            PropertyDescription = "Dimensions"
                        },
                        new
                        {
                            ID = 6,
                            PropertyDescription = "MAC Address"
                        },
                        new
                        {
                            ID = 7,
                            PropertyDescription = "IP Address"
                        },
                        new
                        {
                            ID = 8,
                            PropertyDescription = "Allow USB"
                        },
                        new
                        {
                            ID = 9,
                            PropertyDescription = "Current User"
                        },
                        new
                        {
                            ID = 10,
                            PropertyDescription = "Network Speed"
                        },
                        new
                        {
                            ID = 11,
                            PropertyDescription = "Operating System"
                        },
                        new
                        {
                            ID = 12,
                            PropertyDescription = "Ports"
                        });
                });

            modelBuilder.Entity("DMS.Models.PropertyValue", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("DevicesID")
                        .HasColumnType("int");

                    b.Property<int>("PropertyItemID")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DevicesID");

                    b.HasIndex("PropertyItemID");

                    b.ToTable("PropertyValues");
                });

            modelBuilder.Entity("DeviceCategoryPropertyItem", b =>
                {
                    b.Property<int>("DeviceCategoriesID")
                        .HasColumnType("int");

                    b.Property<int>("PropertiesID")
                        .HasColumnType("int");

                    b.HasKey("DeviceCategoriesID", "PropertiesID");

                    b.HasIndex("PropertiesID");

                    b.ToTable("DeviceCategoryPropertyItem");
                });

            modelBuilder.Entity("DMS.Models.Device", b =>
                {
                    b.HasOne("DMS.Models.DeviceCategory", "DeviceCategory")
                        .WithMany("Devices")
                        .HasForeignKey("DeviceCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeviceCategory");
                });

            modelBuilder.Entity("DMS.Models.PropertyValue", b =>
                {
                    b.HasOne("DMS.Models.Device", "Devices")
                        .WithMany("PropertyValues")
                        .HasForeignKey("DevicesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.Models.PropertyItem", "PropertyItem")
                        .WithMany("PropertyValues")
                        .HasForeignKey("PropertyItemID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Devices");

                    b.Navigation("PropertyItem");
                });

            modelBuilder.Entity("DeviceCategoryPropertyItem", b =>
                {
                    b.HasOne("DMS.Models.DeviceCategory", null)
                        .WithMany()
                        .HasForeignKey("DeviceCategoriesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.Models.PropertyItem", null)
                        .WithMany()
                        .HasForeignKey("PropertiesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DMS.Models.Device", b =>
                {
                    b.Navigation("PropertyValues");
                });

            modelBuilder.Entity("DMS.Models.DeviceCategory", b =>
                {
                    b.Navigation("Devices");
                });

            modelBuilder.Entity("DMS.Models.PropertyItem", b =>
                {
                    b.Navigation("PropertyValues");
                });
#pragma warning restore 612, 618
        }
    }
}
